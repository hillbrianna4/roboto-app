{"version":3,"sources":["components/Students.js","App.js","serviceWorker.js","index.js"],"names":["Student","seeGrades","setState","gradesVisible","hideGrades","handleTagChange","e","newTag","target","value","addTag","id","preventDefault","tags","Array","from","state","push","props","tagInput","current","React","createRef","className","this","onClick","src","alt","student","name","company","email","skill","average","gradeArray","map","grade","indexOf","tag","action","onSubmit","key","ref","type","placeholder","onChange","Component","App","componentDidMount","axios","method","url","then","res","students","data","studentData","studentArray","add","a","b","Number","forEach","grades","sum","reduce","length","obj","pic","firstName","toLowerCase","lastName","filteredArray","handleNameChange","searchQuery","filter","includes","tagMatchArray","tagMatch","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a0c60a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Student extends Component {\n    constructor() {\n        super();\n        this.tagInput = React.createRef();\n        this.state = ({\n            gradesVisible: false,\n            tags: []\n        })\n    }\n\n    seeGrades = () => {\n        this.setState({\n            gradesVisible: true\n        })\n    }\n\n    hideGrades = () => {\n        this.setState({\n            gradesVisible: false\n        })\n    }\n\n    handleTagChange = (e) => {\n        this.setState({\n            newTag: e.target.value\n        })\n    }\n\n    addTag = (e, id) => {\n        e.preventDefault();\n        const tags = Array.from(this.state.tags)\n        tags.push(this.state.newTag);\n        this.setState({\n            tags\n        }, () => {\n            this.props.addTag(id, this.state.tags);\n        });\n\n        this.tagInput.current.value = \"\";\n    }\n\n    render() {\n        return (\n            <div className=\"student\">\n                <div className=\"buttonHolder\">\n                    {this.state.gradesVisible\n                        ? <button onClick={this.hideGrades}>\n                            <i className=\"fas fa-minus\"></i>\n                        </button>\n                        : <button onClick={this.seeGrades}>\n                            <i className=\"fas fa-plus\"></i>\n                        </button>\n                    }\n                </div>\n            \n                <img className=\"robotAvatar\" src=\"https://icons.iconarchive.com/icons/diversity-avatars/avatars/1024/robot-01-icon.png\" alt=\"Robo Avatar\"/>\n            \n                <div className=\"studentInfo\"> \n                    <p className=\"studentName\">{this.props.student.name}</p>\n\n                    <div className=\"infoIndented\">\n                        <p>Company: {this.props.student.company}</p>\n                        <p>Email: {this.props.student.email}</p>\n                        <p>Skill: {this.props.student.skill}</p>\n                        <p>Average: {this.props.student.average}</p>\n                        {this.state.gradesVisible \n                        ?   \n                            <div>\n                                <div className=\"gradeList\">\n                                    {this.props.student.gradeArray.map((grade) => {\n                                        return (\n                                            <p key={grade}>Test {this.props.student.gradeArray.indexOf(grade) + 1}: <span className=\"grade\">{grade}</span>%</p>\n                                        )\n                                    })}\n                                </div>\n\n                                {this.state.tags ?\n                                    <div>\n                                        {this.state.tags.map((tag) => {\n                                            return <p key={tag} className=\"tag\">{tag}</p>\n                                        })}\n                                    </div>\n                                : null}\n\n                                <form action=\"\" className=\"tagForm\" onSubmit={(e) => {this.addTag(e, (this.props.student.key))}}>\n                                    <input ref={this.tagInput} type=\"text\" placeholder=\"Add a tag\" onChange={this.handleTagChange}/>  \n                                </form>\n                            </div>\n                        : null}\n                    </div>\n                </div>\n\n                \n            </div>\n        );\n    }\n};\n\nexport default Student;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Student from './components/Students';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = ({\n\n    })\n  }\n\n  componentDidMount = () => {\n    axios({\n      method: \"GET\",\n      url: \"https://www.hatchways.io/api/assessment/students\",\n    }).then((res) => {\n      const students = res.data.students;\n      this.studentData(students);\n    })\n  }\n\n  studentData = (students) => {\n    let studentArray = [] \n    const add = (a, b) => {\n      return Number(a) + Number(b)\n    }\n\n    students.forEach((student) => {\n      const grades = student.grades\n      const sum = grades.reduce(add)\n      const average = `${(sum / (grades.length))}%`\n      const obj = {\n        pic: student.pic,\n        firstName: student.firstName.toLowerCase(),\n        lastName: student.lastName.toLowerCase(),\n        name: `${student.firstName} ${student.lastName}`,\n        company: student.company,\n        email: student.email,\n        skill: student.skill,\n        gradeArray: student.grades,\n        average: average,\n        key: student.id,\n        tags: []\n      }\n      studentArray.push(obj)\n    })\n\n    this.setState({\n      students: studentArray,\n      filteredArray: studentArray\n    })\n  }\n\n  addTag = (id, tags) => {\n    const students = Array.from(this.state.students)\n    students[id - 1].tags = tags;\n    this.setState({\n      students\n    })\n  }\n\n  handleNameChange = (e) => {\n    const searchQuery = e.target.value.toLowerCase();\n\n    const match = (students) => {\n      return (\n        students.firstName.includes(searchQuery) || students.lastName.includes(searchQuery)\n      )\n    }\n\n    const filteredArray = this.state.students.filter(match)\n\n    this.setState({\n      filteredArray: filteredArray\n    })\n  }\n\n  handleTagChange = (e) => {\n    const searchQuery = e.target.value.toLowerCase();\n    let tagMatchArray = this.state.students;\n    let filteredArray = this.state.students;\n\n    const match = (student) => {\n      return student.tagMatch === true\n    }\n\n    tagMatchArray.forEach((student) => {\n      student.tags.forEach((tag) => {\n        student.tagMatch = false\n        if (tag.includes(searchQuery)) {\n          student.tagMatch = true\n        } \n      })\n    })\n\n    filteredArray = tagMatchArray.filter(match)\n\n    if (searchQuery.length === 0) {\n      filteredArray = this.state.students;\n    }\n\n    this.setState({\n      filteredArray: filteredArray\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <section className=\"studentContainer\">\n\n          <form action=\"\" className=\"searchForm\">\n            <input type=\"text\" placeholder=\"Search by name\" onChange={this.handleNameChange}/>\n            <input type=\"text\" placeholder=\"Search by tag\" onChange={this.handleTagChange} />\n          </form>\n\n          {this.state.students ?\n            <div>\n              {this.state.filteredArray.map((student) => {\n                return (\n                  <Student key={student.key} student={student} addTag={this.addTag}/>\n                )\n              })}\n            </div>\n          : null }\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      \n      window.location.hostname === '[::1]' ||\n      \n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      \n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n       \n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          \n          checkValidServiceWorker(swUrl, config);\n  \n          \n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n         \n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n               \n                console.log('New content is available; please refresh.');\n  \n                \n                if (config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                \n                console.log('Content is cached for offline use.');\n  \n                if (config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    \n    fetch(swUrl)\n      .then(response => {\n        \n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          \n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          \n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}